name: 01) Wazuh - Storage + Core (single-node)

on:
  workflow_dispatch:
    inputs:
      overlay:
        description: "Overlay to deploy (single or production)"
        required: true
        default: "single"
      wazuh_tag:
        description: "wazuh-kubernetes repo tag (e.g., v4.12.0)"
        required: true
        default: "v4.12.0"
      enable_port_forward:
        description: "Start port-forward to dashboard (true/false)"
        required: true
        default: "true"
      local_forward_port:
        description: "Local port for port-forward"
        required: true
        default: "8444"

jobs:
  storage_core:
    runs-on: [self-hosted, linux, ronin, k8s, control-plane]
    timeout-minutes: 120

    env:
      NS: wazuh
      KUBECONFIG_PATH: ${{ github.workspace }}/kubeconfig.yaml
      KUBECONFIG: ${{ github.workspace }}/kubeconfig.yaml
      WAZUH_K8S_TAG: ${{ inputs.wazuh_tag }}
      OVERLAY_CHOICE: ${{ inputs.overlay }}
      RAW_KCFG: ${{ secrets.KUBECONFIG }}
      KCFG_B64_A: ${{ secrets.KUBE_CONFIG_B64 }}
      KCFG_B64_B: ${{ secrets.KUBECONFIG_B64 }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install CLIs (no sudo) and persist PATH
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p "$HOME/bin"
          echo "$HOME/bin" >> "$GITHUB_PATH"
          export PATH="$HOME/bin:$PATH"
          if ! command -v kubectl >/dev/null 2>&1; then
            KVER="$(curl -sS https://dl.k8s.io/release/stable.txt)"
            curl -sSL "https://dl.k8s.io/release/${KVER}/bin/linux/amd64/kubectl" -o "$HOME/bin/kubectl"
            chmod +x "$HOME/bin/kubectl"
          fi
          if ! command -v yq >/dev/null 2>&1; then
            curl -sSL -o "$HOME/bin/yq" https://github.com/mikefarah/yq/releases/download/v4.44.3/yq_linux_amd64
            chmod +x "$HOME/bin/yq"
          fi
          if ! command -v jq >/dev/null 2>&1; then
            curl -sSL -o "$HOME/bin/jq" https://github.com/jqlang/jq/releases/download/jq-1.7.1/jq-linux-amd64
            chmod +x "$HOME/bin/jq"
          fi

      - name: Write kubeconfig (raw or base64)
        shell: bash
        run: |
          set -euo pipefail
          if [ -n "${RAW_KCFG:-}" ]; then
            printf '%s' "$RAW_KCFG" > "$KUBECONFIG_PATH"
          elif [ -n "${KCFG_B64_A:-}" ]; then
            printf '%s' "$KCFG_B64_A" | base64 -d > "$KUBECONFIG_PATH"
          elif [ -n "${KCFG_B64_B:-}" ]; then
            printf '%s' "$KCFG_B64_B" | base64 -d > "$KUBECONFIG_PATH"
          else
            echo "::error::No kubeconfig secret found (KUBECONFIG or KUBE_CONFIG_B64 or KUBECONFIG_B64)"; exit 1
          fi
          chmod 600 "$KUBECONFIG_PATH"
          kubectl cluster-info
          kubectl get nodes -o wide

      - name: Ensure namespace
        shell: bash
        run: |
          kubectl create namespace "$NS" --dry-run=client -o yaml | kubectl apply -f -

      - name: Ensure vm.max_map_count via DaemonSet
        shell: bash
        run: |
          set -euo pipefail
          cat >/tmp/wazuh-sysctl-ds.yaml <<'EOF'
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: wazuh-sysctl
  namespace: kube-system
  labels:
    app: wazuh-sysctl
spec:
  selector:
    matchLabels:
      app: wazuh-sysctl
  template:
    metadata:
      labels:
        app: wazuh-sysctl
    spec:
      hostPID: true
      tolerations:
        - operator: "Exists"
      containers:
        - name: sysctl
          image: busybox:1.36
          securityContext:
            privileged: true
          command: ["/bin/sh","-c"]
          args:
            - |
              set -e
              echo 262144 > /host-proc/sys/vm/max_map_count
              mkdir -p /host-etc/sysctl.d
              echo "vm.max_map_count=262144" > /host-etc/sysctl.d/99-wazuh.conf
              echo "
