name: "Wazuh Manager - enable passwordless authd (manual)"

on:
  workflow_dispatch: {}

concurrency:
  group: wazuh-manager-authd
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  patch-authd:
    runs-on: self-hosted

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install kubectl (no sudo)
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p "$HOME/bin"
          curl -fsSL -o "$HOME/bin/kubectl" "https://dl.k8s.io/release/$(curl -fsSL https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x "$HOME/bin/kubectl"
          echo "$HOME/bin" >> "$GITHUB_PATH"
          kubectl version --client --output=yaml

      - name: Load kubeconfig from secret
        shell: bash
        env:
          KUBE_CONFIG_B64: ${{ secrets.KUBE_CONFIG_B64 }}
        run: |
          set -euo pipefail
          test -n "${KUBE_CONFIG_B64:-}"
          mkdir -p "$HOME/.kube"
          echo "$KUBE_CONFIG_B64" | base64 -d > "$HOME/.kube/config"
          chmod 600 "$HOME/.kube/config"
          echo "KUBECONFIG=$HOME/.kube/config" >> "$GITHUB_ENV"
          kubectl config current-context
          kubectl get nodes -o wide || true

      - name: Find Wazuh manager pod
        id: findpod
        shell: bash
        run: |
          set -euo pipefail
          # Adjust these if your manager label/namespace differ
          NS="wazuh"
          SEL="app=wazuh-manager"
          POD="$(kubectl -n "$NS" get pod -l "$SEL" -o jsonpath='{.items[0].metadata.name}')"
          if [ -z "$POD" ]; then
            echo "No manager pod found with label $SEL in ns $NS" >&2
            kubectl -n "$NS" get pods -l "$SEL" || true
            exit 1
          fi
          echo "pod=$POD" >> "$GITHUB_OUTPUT"
          echo "ns=$NS" >> "$GITHUB_OUTPUT"
          echo "Found manager pod: $POD in ns $NS"

      - name: Backup + set passwordless authd in ossec.conf
        shell: bash
        run: |
          set -euo pipefail
          POD="${{ steps.findpod.outputs.pod }}"
          NS="${{ steps.findpod.outputs.ns }}"
          CONF="/var/ossec/etc/ossec.conf"

          # Backup
          kubectl -n "$NS" exec "$POD" -- sh -lc "cp -f $CONF ${CONF}.bak.$(date +%s)"

          # If <auth> exists -> set <use_password>no</use_password>; else insert full <auth> block
          kubectl -n "$NS" exec "$POD" -- sh -lc '
            set -e
            CONF="/var/ossec/etc/ossec.conf"
            if grep -q "<auth>" "$CONF"; then
              if grep -q "<use_password>" "$CONF"; then
                sed -i "s#<use_password>.*</use_password>#<use_password>no</use_password>#" "$CONF"
              else
                # Add before closing </auth>
                awk '"'"'/<auth>/{print;ins=1;next} ins && /<\/auth>/{print "    <use_password>no</use_password>"; print; ins=0; next} {print}'"'"' "$CONF" > "$CONF.new" && mv "$CONF.new" "$CONF"
              fi
            else
              # Insert a full <auth> block before </ossec_config>
              awk '"'"'/<\/ossec_config>/{print "  <auth>\n    <disabled>no</disabled>\n    <port>1515</port>\n    <use_source_ip>no</use_source_ip>\n    <purge>no</purge>\n    <use_password>no</use_password>\n    <ssl_verify_host>no</ssl_verify_host>\n    <ssl_auto_negotiate>yes</ssl_auto_negotiate>\n  </auth>"; print; next} {print}'"'"' "$CONF" > "$CONF.new" && mv "$CONF.new" "$CONF"
            fi
          '

          echo "Resulting <auth> block:"
          kubectl -n "$NS" exec "$POD" -- sh -lc "awk '/<auth>/{p=1} p; /<\\/auth>/{exit}' $CONF || true"

      - name: Restart Wazuh manager and show last logs
        shell: bash
        run: |
          set -euo pipefail
          POD="${{ steps.findpod.outputs.pod }}"
          NS="${{ steps.findpod.outputs.ns }}"
          kubectl -n "$NS" exec "$POD" -- sh -lc '/var/ossec/bin/wazuh-control restart || true'
          sleep 10
          kubectl -n "$NS" logs "$POD" --tail=120 | tail -n 120 || true

      - name: (Optional) quick port check from an agent
        shell: bash
        continue-on-error: true
        run: |
          NS="wazuh"
          AGENT_POD="$(kubectl -n "$NS" get pod -l app=wazuh-agent -o jsonpath='{.items[0].metadata.name}' 2>/dev/null || true)"
          if [ -n "$AGENT_POD" ]; then
            echo "Testing 1515 from agent pod: $AGENT_POD"
            kubectl -n "$NS" exec "$AGENT_POD" -- sh -lc 'command -v nc >/dev/null || (apk add --no-cache netcat-openbsd || true); nc -vz wazuh.wazuh.svc.cluster.local 1515 || true'
          else
            echo "No agent pod found (ok)."
          fi
