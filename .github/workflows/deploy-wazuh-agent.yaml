name: Deploy Wazuh Agent (manual)

on:
  workflow_dispatch:

concurrency:
  group: deploy-wazuh-agent
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  deploy:
    runs-on:
      - self-hosted
      - linux
      - ronin
      - k8s
      - control-plane

    env:
      NS: wazuh
      IMAGE: ghcr.io/saurab123456/wazuh-agent:4.12.0
      AUTHD_PORT: "1515"
      EVENTS_PORT: "1514"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Ensure kubectl is available (no sudo)
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p "$HOME/.local/bin"
          if ! command -v kubectl >/dev/null 2>&1; then
            curl -fsSL -o "$HOME/.local/bin/kubectl" "https://dl.k8s.io/release/$(curl -fsSL https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
            chmod +x "$HOME/.local/bin/kubectl"
          fi
          echo "$HOME/.local/bin" >> "$GITHUB_PATH"
          kubectl version --client --output=yaml

      - name: Write kubeconfig from secret
        shell: bash
        env:
          KUBE_CONFIG_B64: ${{ secrets.KUBE_CONFIG_B64 }}
        run: |
          set -euo pipefail
          if [ -z "${KUBE_CONFIG_B64:-}" ]; then
            echo "::error::Missing repo secret KUBE_CONFIG_B64"; exit 1
          fi
          mkdir -p "$HOME/.kube"
          echo "$KUBE_CONFIG_B64" | base64 -d > "$HOME/.kube/config"
          chmod 600 "$HOME/.kube/config"
          kubectl get nodes -o wide || true
          kubectl get ns "$NS" >/dev/null 2>&1 || kubectl create ns "$NS"

      - name: Locate manager pods
        shell: bash
        run: |
          set -euo pipefail
          MPOD="$(kubectl -n "$NS" get pod -l app=wazuh-manager,node-type=master -o jsonpath='{.items[0].metadata.name}' || true)"
          WPOD="$(kubectl -n "$NS" get pod -l app=wazuh-manager,node-type=worker -o jsonpath='{.items[0].metadata.name}' || true)"
          [ -z "$MPOD" ] && { echo "::error::No master pod found"; exit 1; }
          echo "MASTER_POD=$MPOD" >> "$GITHUB_ENV"
          [ -n "$WPOD" ] && echo "WORKER_POD=$WPOD" >> "$GITHUB_ENV"
          kubectl -n "$NS" wait --for=condition=Ready "pod/$MPOD" --timeout=180s || true
          [ -n "$WPOD" ] && kubectl -n "$NS" wait --for=condition=Ready "pod/$WPOD" --timeout=180s || true

      - name: Force BOTH managers to passwordless + restart pods
        shell: bash
        run: |
          set -euo pipefail
          . "$GITHUB_ENV" || true
          make_pwless () {
            local POD="$1"
            [ -z "$POD" ] && return 0
            echo "Forcing passwordless auth in $POD"
            kubectl -n "$NS" exec "$POD" -- sh -lc '
              FILE=/var/ossec/etc/ossec.conf
              cp -f "$FILE" "$FILE.bak" || true
              if grep -q "<use_password>" "$FILE"; then
                sed -i "s#<use_password>yes</use_password>#<use_password>no</use_password>#g" "$FILE"
              else
                awk '"'"'{print} /<auth>/ {print "    <use_password>no</use_password>"}'"'"' "$FILE" > "$FILE.tmp" && mv "$FILE.tmp" "$FILE"
              fi
            '
            kubectl -n "$NS" delete pod "$POD"
          }
          make_pwless "${MASTER_POD:-}"
          make_pwless "${WORKER_POD:-}"

          # Wait for pods to come back
          kubectl -n "$NS" rollout status sts/wazuh-manager-master --timeout=300s || true
          kubectl -n "$NS" rollout status sts/wazuh-manager-worker --timeout=300s || true

      # (the rest of your workflow: Services, ConfigMap, DaemonSet, verify, flip events, diagnostics â€¦ stays unchanged)
